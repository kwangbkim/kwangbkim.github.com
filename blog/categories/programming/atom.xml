<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: programming | Kwang B. Kim]]></title>
  <link href="http://kwangbkim.github.com/blog/categories/programming/atom.xml" rel="self"/>
  <link href="http://kwangbkim.github.com/"/>
  <updated>2013-09-17T22:39:07-04:00</updated>
  <id>http://kwangbkim.github.com/</id>
  <author>
    <name><![CDATA[Kwang B. Kim]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Prefer Enums as Parameters]]></title>
    <link href="http://kwangbkim.github.com/blog/2013/09/17/prefer-enums-as-parameters/"/>
    <updated>2013-09-17T23:04:00-04:00</updated>
    <id>http://kwangbkim.github.com/blog/2013/09/17/prefer-enums-as-parameters</id>
    <content type="html"><![CDATA[<p>This post goes along with the previous one about <a href="http://kwangbkim.com/blog/2013/09/08/named-parameters-for-readability/">named parameters</a>.  I was re-reading some old notes from <a href="http://www.amazon.com/Effective-Java-Edition-Joshua-Bloch/dp/0321356683/ref=sr_1_1?ie=UTF8&amp;qid=1379471724&amp;sr=8-1&amp;keywords=effective+java">Effective Java</a> when I came across a little snippet about why enums are preferable as parameter types over things like booleans or strings.</p>

<p>Take this example:</p>

<pre><code>public int someFormula(int value, bool isFarenheight) {
  // do some stuff...
}
</code></pre>

<p>This method signature isn't egregious, but there are a few issues.  The first is that an assumption is made that a celsius value will be passed in if isFarenheight = false.  It's probably what the API is expecting, but who knows for sure?  I suppose the parameter could be renamed to <em>isFarenheightOrCelsius</em>.  But say, for whatever reason, a new degree type needs to be included.  Now the situation becomes more complicated.  The API developer will probably have to create a brand new method with a different name, or do a one-off overload that'll make things even more confusing for the client developer.</p>

<p>In short, when in doubt try to prefer enums as parameter types.  It's more readable for the developer and extensible for future changes.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Named Parameters for Readability]]></title>
    <link href="http://kwangbkim.github.com/blog/2013/09/08/named-parameters-for-readability/"/>
    <updated>2013-09-08T18:11:00-04:00</updated>
    <id>http://kwangbkim.github.com/blog/2013/09/08/named-parameters-for-readability</id>
    <content type="html"><![CDATA[<p>Here's a nice, <a href="http://mat-mcloughlin.net/2013/08/27/using-named-parameters-for-constants.html">short post</a> I enjoyed about how to make your code more readable.  I think this is particular useful for the languages out there without a big IDE.  In .NET, using solid parameter names mitigates the usefulness of this because of intellisense.  But, overall I'll be trying to do this more in my own code.</p>
]]></content>
  </entry>
  
</feed>
