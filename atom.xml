<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Kwang B. Kim]]></title>
  <link href="http://kwangbkim.github.com/atom.xml" rel="self"/>
  <link href="http://kwangbkim.github.com/"/>
  <updated>2012-12-06T22:12:15-05:00</updated>
  <id>http://kwangbkim.github.com/</id>
  <author>
    <name><![CDATA[Kwang B. Kim]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Made in the USA]]></title>
    <link href="http://kwangbkim.github.com/blog/2012/12/06/made-in-the-usa/"/>
    <updated>2012-12-06T21:55:00-05:00</updated>
    <id>http://kwangbkim.github.com/blog/2012/12/06/made-in-the-usa</id>
    <content type="html"><![CDATA[<p>&#8220;Made in the USA&#8221; seems to be all the rage these days.  For instance, today Apple announced that they&#8217;ll start <a href="http://www.latimes.com/business/la-fi-apple-manufacturing-20121207,0,2720461.story">building Macs in the USA</a> again next year.  I think the underlying principle here is intuitive enough, there has been plenty of bad press regarding the conditions of foreign factories making US products.  <a href="https://www.youtube.com/watch?v=M5uYCWVfuPQ">Nike</a> is another company that comes to mind.  The stories detail sweatshop conditions, minimal salaries and long hours, in some cases even leading to <a href="https://en.wikipedia.org/wiki/Foxconn_suicides">suicides</a>.</p>

<p>Imagine having to walk into these factories every day, working super long shifts for little pay and no prospects for growth.  Miserable right?  So the consensus becomes let&#8217;s take away those awful jobs and bring them back to the US where they belong.</p>

<p>The problem is, what we think are horrible conditions (which they are) are locally considered really, really good in comparison to the domestic competition.  According to  <a href="http://www.theatlantic.com/magazine/archive/2012/12/mr-china-comes-to-america/309160/?single_page=true">this</a> nice article at the Atlantic :</p>

<blockquote><p>If you are looking for the most-gruesome factory conditions in China, you donâ€™t go to a  multinational giant like Foxconn, which has to deal with Western customers and pay at least some attention to appearances and laws. You go instead to the small, ramshackle, often unregulated workshops, often away from the big cities, where conditions are as inefficient and sometimes as unsafe as they were when China was just beginning to industrialize.</p></blockquote>

<p>I agree with the overall sentiment of making products domestically.  It is an altruistic notion that we demand our products be made in safe, fair environments.  But if our long term goal is to help foreign countries improve their own working conditions, simply taking jobs away and moving them back to the US may be counterproductive.  As in, it lowers overall demand for jobs in those foreign countries, making it easier for the sweatshops that we hate so much to subsist.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Todo Apps. Are. Everywhere.]]></title>
    <link href="http://kwangbkim.github.com/blog/2012/11/11/todo-apps-are-everywhere/"/>
    <updated>2012-11-11T17:14:00-05:00</updated>
    <id>http://kwangbkim.github.com/blog/2012/11/11/todo-apps-are-everywhere</id>
    <content type="html"><![CDATA[<p>I read an interesting article on <a href="http://www.codinghorror.com/blog/">Jeff Atwood&#8217;s blog</a> regarding his thoughts on <a href="http://www.codinghorror.com/blog/2012/10/todont.html">Todo Apps</a> and how we sometimes go overboard trying to be super organized.  I&#8217;ve fallen for the Todo App trap multiple times myself, having used <a href="https://workflowy.com/">Workflowy</a> and <a href="http://culturedcode.com/things/">Things</a> to no avail.  They were both good apps, but at some point they each became too much of a hassle to maintain and it wasn&#8217;t worth the effort.</p>

<p>I guess what it comes down to is striking that delicate balance between being organized and actually getting stuff done.  Todo apps aren&#8217;t worthless, it&#8217;s just that if we spend all of our time finding and using one it ironically becomes detrimental to our own productivity.</p>

<p>I think I&#8217;ve found a pretty good app in <a href="http://www.any.do/">Any.Do</a>.  It&#8217;s simple, intuitive and syncs easily between phone/computer/tablet etc.  I don&#8217;t put every little thing on it but it&#8217;s certainly nice to have around.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Octopress: Static Blogging]]></title>
    <link href="http://kwangbkim.github.com/blog/2012/10/13/octopress-static-blogging/"/>
    <updated>2012-10-13T15:48:00-04:00</updated>
    <id>http://kwangbkim.github.com/blog/2012/10/13/octopress-static-blogging</id>
    <content type="html"><![CDATA[<p>I&#8217;ve been running this blog for a few months now without giving proper credit to <a href="http://octopress.org/">Octopress</a>.  If you haven&#8217;t heard of it, Octopress is a website generator primarily for blogging, on top of the ruby <a href="https://github.com/mojombo/jekyll">jekyll framework</a>.  It&#8217;s easy to use (little to no Ruby experience required), is free and hooks into <a href="http://pages.github.com/">Github Hosting</a> (also free) quite nicely.  If you&#8217;re thinking about starting a site it&#8217;s worth checking out.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Childhood Nostalgia: NES Cartridge Cleaning]]></title>
    <link href="http://kwangbkim.github.com/blog/2012/09/29/nes/"/>
    <updated>2012-09-29T14:20:00-04:00</updated>
    <id>http://kwangbkim.github.com/blog/2012/09/29/nes</id>
    <content type="html"><![CDATA[<p>There was an <a href="http://www.mentalfloss.com/blogs/archives/142550">article</a> the other day analyzing the effectiveness of blowing into NES cartridges.  The conclusion they came to was that blowing did not help at all and any perceived improvement was due to the <a href="https://en.wikipedia.org/wiki/Placebo">placebo effect</a>.</p>

<p>To which I can only reply:
<img src="http://kwangbkim.github.com/images/No.jpeg" alt="" /></p>

<p>Ok, so they&#8217;re probably right, technically.  But aside from playing the Nintendo, the only thing better was trying to make the thing work.  Which it didn&#8217;t half the time.  As a kid, getting an NES was like the adolescent version of your first car.  It was old, beat up and incredibly unreliable.  But when you were able to cruise around for a while (before it broke down at the worst possible time) was it not the best thing ever?</p>

<p>In my opinion, blowing into those cartridges was all part of the NES experience.  It was like a bonding ritual.  Where I grew up you were not cool until you had a routine that seemed to work more often than not.  You were also encouraged to try special moves during times of crisis.  If you could make an NES work long enough to beat Zelda and get through Contra (with or without the <a href="https://en.wikipedia.org/wiki/Konami_Code">Konami Code</a>) you were basically a legend.</p>

<p>I think back to what it would have been like to sit around the NES, monotonically resetting the cartridge, hoping for a good connection.  It may have made the system work better and for longer.  But ironically, it would have been a whole lot less fun.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Quant Trading For The Public]]></title>
    <link href="http://kwangbkim.github.com/blog/2012/09/21/quant-trading-for-the-public/"/>
    <updated>2012-09-21T22:49:00-04:00</updated>
    <id>http://kwangbkim.github.com/blog/2012/09/21/quant-trading-for-the-public</id>
    <content type="html"><![CDATA[<p>Over the past few months I&#8217;ve noticed a couple start ups that offer the general public access to create their own algorithmic trading strategies.  One such startup I saw today on <a href="http://news.ycombinator.com/">Hacker News</a> is called <a href="https://quantblocks2.herokuapp.com/">Quant Blocks</a>.</p>

<h2></h2>

<p>The site and product both look impressive.  What worries me is that these types of products advertise a &#8220;simple&#8221; way of making money from trading.  Certainly it&#8217;s not like those infomercials you see on TV that have <a href="http://www.youtube.com/watch?v=camXcNBLi9c">Jimmy Johnson</a> touting wares to poor souls.  But to say that making money from trading can be as easy as creating a couple rules and backtesting them against data is foolhardy.</p>

<p>What&#8217;s worse is that I think rules based trading has the potential to invite more instability to an already crazy market.  Warren Buffet likes to refer to the market as a voting machine.  That is, when you buy Apple stock you are giving it an &#8220;up&#8221; vote that you think this stock is worth more than its current price.  So what happens when I find a successful strategy that tells me to buy Apple during the first week of June, or on November 11th before 11am, and sell it all on December 15th but only if IBM is rising that day?  It could make money, but my &#8220;vote&#8221; has become random, uninformed and worthless.  When people stop investing and start gambling in the market, needless to say bad things happen.</p>

<h2></h2>

<p>The bottom line is don&#8217;t let this stop you from trading for fun.  But just like a casino, don&#8217;t bring more money than you can afford to lose.  Treat it as entertainment and don&#8217;t take it too seriously, or you might just end up at a road show listening to a semi-celebrity touting some new amazing money making invention.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[TextMate 2 On Github]]></title>
    <link href="http://kwangbkim.github.com/blog/2012/09/05/textmate-2-on-github/"/>
    <updated>2012-09-05T21:46:00-04:00</updated>
    <id>http://kwangbkim.github.com/blog/2012/09/05/textmate-2-on-github</id>
    <content type="html"><![CDATA[<p>If you have a Mac and are a developer chances are that you&#8217;re already familiar with <a href="http://blog.macromates.com/">TextMate</a>.  Well, after six years of waiting the highly anticipated sequel is out, as open source software.  Kudos to Allan Odgaard for sticking with it for so long, though many have theorized (myself included) that the project was basically being given up on, a la <a href="https://en.wikipedia.org/wiki/Duke_Nukem_Forever">Duke Nukem Forever</a>.</p>

<p>Well, after a few weeks it looks like the <a href="https://github.com/textmate/textmate">Github project</a> is alive and kicking, with tons of fixes and enhancements being added.  Check it out for yourself and see what you think.  I do highly recommend installing  <a href="http://mxcl.github.com/homebrew/">Homebrew</a> as it makes installing TextMate&#8217;s dependencies a cinch.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Tried Algo Trading, Losses Ensue]]></title>
    <link href="http://kwangbkim.github.com/blog/2012/08/26/tried-algo-trading/"/>
    <updated>2012-08-26T18:06:00-04:00</updated>
    <id>http://kwangbkim.github.com/blog/2012/08/26/tried-algo-trading</id>
    <content type="html"><![CDATA[<p>About a year ago I had some extra time on my hands and decided I&#8217;d take a crack at creating an <a href="http://en.wikipedia.org/wiki/Algorithmic_trading">algorithmic trading</a> strategy.  <a href="http://individuals.interactivebrokers.com/en/main.php">Interactive Brokers</a> offers an API which you can use to gather data and execute trades, though you will have to plop down the $10k minimum for an account.</p>

<p>Here&#8217;s a quick pitch of the idea I was executing.  Long story short is that it did horribly, (maybe because I didn&#8217;t want to make it do intraday trading, reason <a href="http://blogs.wsj.com/marketbeat/2012/08/02/knight-capital-trading-error-cost-firm-440-million/">here)</a> but if you&#8217;re interested in this stuff I&#8217;ve dumped all of my code out to <a href="https://github.com/kwangbkim/IBAlgoTrader">GitHub</a>.</p>

<h2>Overview</h2>

<p>On any given day most of the global markets are generally correlated.  Not only Asia/US/Europe, but emerging countries as well like Brazil and India.  But at the same time each individual country&#8217;s financial market is affected by it&#8217;s own inner dynamics.  Things like domestic and international politics can change a single economy in a way that differs from the rest of the world.</p>

<p>The idea is to track each individual country&#8217;s market and compare it to some global world index.  I used Vanguard&#8217;s <a href="https://personal.vanguard.com/us/funds/snapshot?FundId=3141&amp;FundIntExt=INT">Total World Stock ETF</a>.  The price data I collected was daily and weekly.  By gathering price data based on different time intervals, I can calculate a country&#8217;s correlation to the global index over multiple time periods.  When there&#8217;s a large difference between the long term (weekly) and short term (daily) correlations, that denotes an event occurred in a particular country&#8217;s domestic market and a trade should be made.</p>

<h2>Main pitfalls</h2>

<ul>
<li>International events that affect multiple countries at the same time, triggering multiple trade alerts.  Not good because the goal is to make separate trades that are uncorrelated with each other to increase diversification and reduce variance.</li>
<li>It seemed like some events could just be rumors and dissipates quickly, or the market is just too efficient.  By the time my program noticed a correlation shift it would be too late and I&#8217;d lose money.</li>
</ul>


<p>The true moral of the story here is that retail trading should be done for fun, not for profit!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Lumosity: Cool Idea, Want Refund]]></title>
    <link href="http://kwangbkim.github.com/blog/2012/08/14/lumosity-cool-idea/"/>
    <updated>2012-08-14T22:03:00-04:00</updated>
    <id>http://kwangbkim.github.com/blog/2012/08/14/lumosity-cool-idea</id>
    <content type="html"><![CDATA[<p>If you haven&#8217;t heard of <a href="http://www.lumosity.com/">Lumosity</a> it&#8217;s a relatively new startup that&#8217;s been hyped up a lot by the media.  The basic premise is that playing their games, based on academic research, can help improve brain function and performance.</p>

<p>Sounds like a pretty cool idea right?  I figured I&#8217;d give it a shot and signed up for a one year membership.  The first couple weeks were fine, I didn&#8217;t really feel any different.  Then it just became a chore and seeing as how I didn&#8217;t benefit, I slowly gave up on it.  I&#8217;m not going to argue whether or not the games actually help as that wasn&#8217;t the issue for me.</p>

<p>The real problem was the offered benefits to me were generally worthless.  For instance, they offered not one, but two types of games to help train your peripheral vision.  I loathed these games but was forced to play it over and over even when it wasn&#8217;t something I cared to improve.  I wanted to work on problem solving skills, hoping it would improve my abilities as a developer.  Unfortunately, they seem to only have games for simple non-complex problems like basic arithmetic.</p>

<p>So after 80 bucks down the drain there&#8217;s a simple lesson to be learned: if you want to get smarter there&#8217;s no substitute for hard work.  If you&#8217;re a developer that means writing more code, reading others, and occasionally hitting the books.  Everything else is a probably a distraction.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[App.Net]]></title>
    <link href="http://kwangbkim.github.com/blog/2012/08/12/app-dot-net/"/>
    <updated>2012-08-12T15:42:00-04:00</updated>
    <id>http://kwangbkim.github.com/blog/2012/08/12/app-dot-net</id>
    <content type="html"><![CDATA[<p>In my <a href="http://kwangbkim.com/blog/2012/08/01/silicon-valley-and-the-timeshare-model/">Sum Zero Silicon Valley</a>  post I noted <a href="http://daltoncaldwell.com/">Dalton Caldwell&#8217;s</a> new venture <a href="http://join.app.net">App.Net</a>, a Twitter-like application focused on users and not advertising.  At the time of my writing, funding had been going on for a couple weeks but had only amassed around $150k, well short of the $500k goal.  With only a week left things were looking grim right?</p>

<p>Wrong!  I have to give Dalton huge props here, because with many people theorizing that funding would be well short, he remained confident.  His explanation <a href="http://daltoncaldwell.com/appnet-is-not-vaporware">here</a> is pretty spot on.  It also doesn&#8217;t hurt to have <a href="http://daringfireball.net/">John Gruber</a> advocating your stuff.  I think within a day of his giving a shout out to App.Net, the site was able to raise an additional $100k.</p>

<p>So what&#8217;s next?  Well, I suppose that the real work begins.  The <a href="https://github.com/appdotnet/api-spec">API</a> needs to be hashed out, as that is still a work in progress.  <a href="http://samsoff.es/posts/app-net-is-dreaming-small">Sam Soffes</a> made a good point in that App.Net may have marketing issues, as it seems that the product is geared more towards developers than users themselves.  The product itself still needs to be built, the only tangible thing that exists right now is a prototype and a few apps to prove the API can work.</p>

<p>But still, the next few months should be exciting.  I&#8217;ll be watching the development of the API closely as that to me is where the real possibilities lie.  Congratulations to the App.Net team!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Open Sourced Judging]]></title>
    <link href="http://kwangbkim.github.com/blog/2012/08/10/open-source-judging/"/>
    <updated>2012-08-10T20:18:00-04:00</updated>
    <id>http://kwangbkim.github.com/blog/2012/08/10/open-source-judging</id>
    <content type="html"><![CDATA[<p>As a Korean-American I&#8217;ve had the luxury to follow both countries in the current Olympics.  One particular story that jumped out was about Shin Lam, the South Korean fencer who was unfairly eliminated due to a clock malfunction.  Shin Lam only had to evade getting touched for one second in order to move on to the finals.  Unfortunately, time works in <a href="http://www.youtube.com/watch?v=G7QENF5Uf7k">mysterious ways</a>.</p>

<p>I feel sorry for her.  But in retrospect, this latest calamity makes South Korea par for the course in judging mishaps, at best.  Anyone remember <a href="http://www.youtube.com/watch?v=cJYBV9BXQNY">Roy Jones Jr.</a>?</p>

<p>Mistakes, misjudgment and mismanagement are all too common when judicial power is given to a select few.  The causes can vary from subjective bias, to incompetence, and at worst outright corruption.  It transcends not only sports like boxing and soccer, but also to organizational entities like governments.  Just ask the people living in Egypt, Syria, Tunisia or Libya.</p>

<p>Back to fencing and judging.  Wouldn&#8217;t it be great if we treated judging like our open sourced software?  That is, a skilled and knowledgeable community working together, in the open for all to see.  I am pretty sure that more than six people exist in the world who can accurately score a fencing competition.  Why delegate such important decisions to a small group of people?</p>

<p>I&#8217;m sure there would be tons of issues with this, specifically the logistics and time efficiency of making such decisions.  But with services like Twitter that provide instant feedback, here&#8217;s to hoping a new model can be developed so that athletes like Roy Jones Jr. and Shin Lam don&#8217;t put in four years of training to get screwed.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Sum Zero Silicon Valley]]></title>
    <link href="http://kwangbkim.github.com/blog/2012/08/01/silicon-valley-and-the-timeshare-model/"/>
    <updated>2012-08-01T23:00:00-04:00</updated>
    <id>http://kwangbkim.github.com/blog/2012/08/01/silicon-valley-and-the-timeshare-model</id>
    <content type="html"><![CDATA[<p>Over the past week I&#8217;ve been reading a lot of material on <a href="http://daltoncaldwell.com/">Dalton Caldwell&#8217;s</a> blog.  It&#8217;s a tiny bit Jerry Maguire-ish but over and over again I find myself nodding my head in agreement.  The latest hot topic has been the recent changes to Twitter, presumably in an attempt to gain a better position to monetize their business.</p>

<p>I think there is a fundamental flaw in the tech to marketing business model.  By saying tech to marketing, I mean a company who starts off as a tech company to attract users, who then changes to a marketing company to make money once they reach critical mass.  It&#8217;s happened to Facebook, and now it&#8217;s happening to Twitter.</p>

<p>There&#8217;s nothing wrong when a business tries to make money.  But something seems a bit dubious about the whole process.  It&#8217;s kind of like one of those free timeshare weekend getaways.  Seems like a nice deal, until you&#8217;re subjected to 8 hours of pitches from salesman.  Yes, those salesman were within their right to do whatever.  After all, it&#8217;s not like you&#8217;re paying for anything.  But it still leaves a bad taste in your mouth doesn&#8217;t it?</p>

<p>It&#8217;s the same kind of idea with some of these tech companies.  They&#8217;ve attained users who&#8217;ve been attracted to their free service.  But now to monetize the business the focus changes from pleasing the users to pleasing the advertisers or sponsors.  It creates a sum zero relationship because it&#8217;s near impossible to keep either happy without angering the other.  In the end the advertisers are the ones paying, so they are the ones who are catered to.  Meanwhile, users and third party developers slowly get more and more annoyed until a new free service comes along and everyone joins that and the business goes bust.  Presumably the process will repeat itself.</p>

<p>Granted, not all companies have problems with this model.  <a href="http://www.stackexchange.com">StackExchange</a> offers an amazing product, is free and ad supported and is doing just fine thank you.</p>

<p>Going back to Twitter, I&#8217;ve subscribed to <a href="http://join.app.net">App.Net</a>, Dalton Caldwell&#8217;s potential alternative.  Imagine the best of Twitter: clean, no ads, completely user focused, all for four bucks a month.  But it needs to raise $500k by August 14th and it doesn&#8217;t seem like they&#8217;re going to make it.  But we can all dream can&#8217;t we?</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Getting A Job Out of College]]></title>
    <link href="http://kwangbkim.github.com/blog/2012/07/25/getting-a-job-out-of-college/"/>
    <updated>2012-07-25T20:53:00-04:00</updated>
    <id>http://kwangbkim.github.com/blog/2012/07/25/getting-a-job-out-of-college</id>
    <content type="html"><![CDATA[<p>It&#8217;s been five years since I first graduated from college and got a real job.  Here are the experiences from my first real job search, if you&#8217;re out there looking I hope it&#8217;ll help you.</p>

<h2>Internship Experience</h2>

<p>My junior year I did an internship at a big corporate insurance company.  To be blunt, I wasn&#8217;t a great fit.  As a developer I was able to get a good amount of work done.  Still, I was frustrated at the total length of time it took to gets things finished.  A tiny request such as renaming a label could take weeks by the time code reviews, QA and production approval take place.</p>

<p>I also didn&#8217;t fit in well with the company culture.  For instance every Friday was hawaiian shirt day (queue office space references).  Perhaps it&#8217;s petty to hate something so small but it&#8217;s the principle that bothered me.  If I wore a hawaiian shirt it would be an admittance that I hate my job and would much rather be off on some remote island drinking a cocktail with a little umbrella in it.  I don&#8217;t want to hate work nor was I longing for an early retirement.  Call me a stereotypical millennial but I wanted to work hard, hopefully doing something I liked.</p>

<p>Don&#8217;t get me wrong, the company and people treated me great.  As an attempt to keep my options open I kept a line of communication with my old boss.  We spoke a bunch of times but it was clear I was better off looking elsewhere.</p>

<h2>Potential Suitors</h2>

<p>Two companies stick out into my mind during my search.  One was a small Microsoft shop that I received an offer from and another was a small vendor from which I ran away as far and as fast as possible.</p>

<p>I really liked the Microsoft shop.  Everyone was polite and thoughtful and the coders I met seemed pretty cool.  I didn&#8217;t get tested technically, so they probably wanted someone they liked at a personal level and who would be committed to the company.</p>

<p>I did have reservations about the shop.  The first was that they used a little known Microsoft language for their development.  I wasn&#8217;t crazy about that.  The offer that came in was a little low to me.  Lastly, the company was located in a suburb where there wasn&#8217;t much to do and not many other young people to meet.  All of that combined I had to pass with some regret.</p>

<p>But there was zero regret in passing on the small vendor.  I distinctly remember walking into the office.  Everything was beige.  The walls, the computers, the floor, the toilets.  Perhaps a monochromatic scheme was in at the time I thought.  The interview I had with the manager was  painful.  We talked for about five minutes.  Then he started reading a newspaper while asking me questions.  At first I thought if this was just a rouse, some test to see if I could keep my composure.  Then reality sank in.  I wondered if there was a cordial way to just excuse myself and get out of there.  I stuck it out and wrote a polite email declining a second interview.</p>

<h2>The One</h2>

<p>I came into contact with a recruiter who set me up with an interview at a hedge fund.  The work seemed interesting, I liked the idea of being part of a small team building programs in an agile manner.  I met every developer on the team.  They were all great.  Manager seemed like a great guy.  Everything was just peachy.  Then came the show stopper.  The conversation went something like this:</p>

<blockquote><p>Manager - so how are your VB.NET skills?<br/>
Me - uh, not good.  Basically non-existent.<br/>
.. awkward silence ..<br/>
Manager - every developer has to pass create a program on the spot as a test<br/>
Me - I see..<br/>
.. more awkward silence ..</p></blockquote>

<p>After some more discussion and awkward silences I decided to just take a crack at it.  Worst case scenario I look like an idiot though no better than before.  With the allowed use of google I was able to hack up a solution in the two hours I was given.  I finished just as time expired and was graciously given a little leeway with a couple bugs in my code.  After it was all done I was told I was the only candidate they interviewed who completed the test and they&#8217;d be in touch.  And just like that I had my first job.</p>

<h2>Finding Your First Job</h2>

<h3>Whatever you think want to do when you get out of college, do it first during your summer breaks</h3>

<p>You want to be a software developer?  Start working at it now.  Get an internship, work on side projects, start a web site, join GitHub etc.  The more experience you get prior to graduation the better you look once you get out.  Try and figure out what areas you like and which ones you don&#8217;t.  This will help you narrow down your job search.</p>

<h3>Interviews work both ways</h3>

<p>Even in today&#8217;s crappy economy don&#8217;t settle on taking the first job offered to you.  Do you like the company?  Do you like the people?  Do they seem happy?  Will you be happy moving if you need to?  Do you believe in the product?  Figure out what your priorities are and go from there.</p>

<h3>Don&#8217;t over think it</h3>

<p>If you find a good company with a good product, a good team and a good manager then you&#8217;re all set.  Try not to get too caught up in finding the perfect dream job.  I know this kind of goes against what I said above.  Just something to keep in mind if you&#8217;re stressing out on whether or not you should take an offer.</p>

<h3>Prepare, prepare, prepare</h3>

<p>Interviewing is not easy, especially if you&#8217;re a software developer.  A developer interview can range anywhere from a couple hours of conversation, to written tests, to writing code on a whiteboard all day.  Go over your resume and make sure you have a good grasp of all the fundamentals of the languages you list.  Also, start practicing coding problems.  Do challenges like Google Code Jam or TopCoder if you can.</p>
]]></content>
  </entry>
  
</feed>
